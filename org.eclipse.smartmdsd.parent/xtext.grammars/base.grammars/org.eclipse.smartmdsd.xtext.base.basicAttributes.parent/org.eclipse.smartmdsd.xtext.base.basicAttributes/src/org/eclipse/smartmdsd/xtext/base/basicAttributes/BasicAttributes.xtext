// automatically generated by Xtext
grammar org.eclipse.smartmdsd.xtext.base.basicAttributes.BasicAttributes with org.eclipse.smartmdsd.xtext.base.docuterminals.DocuTerminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/smartmdsd/base/basicAttributes" as attr

AttributeDefinition returns attr::AttributeDefinition:
	(documentation=DOCU_COMMENT)?
	name=ID ':' type=AbstractAttributeType ('=' defaultvalue=AbstractValue)? (';')?
;

AttributeRefinement returns attr::AttributeRefinement:
	(documentation=DOCU_COMMENT)?
	attribute=[attr::AttributeDefinition|FQN] '=' value=AbstractValue (';')?
;

// parser rules for names
FQN returns ecore::EString: ID ('.' ID)* ;

EBoolean returns ecore::EBoolean:
	'true' | 'false';
EString returns ecore::EString:
	STRING;
EInt returns ecore::EInt:
	'-'? INT;
EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EnumerationElement returns attr::EnumerationElement:
	name=ID ('=' value=EInt)? (';')?
;

AbstractAttributeType returns attr::AbstractAttributeType:
	PrimitiveType | InlineEnumerationType;

InlineEnumerationType returns attr::InlineEnumerationType:
	'InlineEnumeration' (array=ArrayType)? '{' enums+=EnumerationElement+ '}'
;

ArrayType returns attr::ArrayType:
	{attr::ArrayType}
	'[' (length=Cardinality)? ']'
;
Cardinality returns ecore::EString:
	INT | '*'
;

enum PRIMITIVE_TYPE_NAME returns attr::PRIMITIVE_TYPE_NAME:
	Int8="Int8" | Int16="Int16" | Int32="Int32" | Int64="Int64" |
	UInt8="UInt8" | UInt16="UInt16" | UInt32="UInt32" | UInt64="UInt64" |
	Float="Float" | Double="Double" | String="String" | Boolean="Boolean"
;

PrimitiveType returns attr::PrimitiveType:
	typeName=PRIMITIVE_TYPE_NAME (array=ArrayType)?
;


AbstractValue returns attr::AbstractValue:
	SingleValue | ArrayValue
;

ArrayValue returns attr::ArrayValue:
	'[' values+=SingleValue (',' values+=SingleValue)* ']'
;

SingleValue returns attr::SingleValue:
	{attr::IntValue} value=EInt | 
	{attr::FloatingPointValue} value=EDouble | 
	{attr::StringValue} value=EString | 
	{attr::BoolValue} value=EBoolean |
	{attr::EnumerationValue} value=[attr::EnumerationElement|FQN]
;
