/********************************************************************************
 * Copyright (c) 2017 Technische Hochschule Ulm, Servicerobotics Ulm, Germany
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Contributors:
 *   Alex Lotz, Dennis Stampfer, Matthias Lutz
 ********************************************************************************/
grammar org.eclipse.smartmdsd.xtext.service.parameterDefinition.ParameterDefinition with org.eclipse.smartmdsd.xtext.base.basicAttributes.BasicAttributes

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/smartmdsd/service/parameterDefinition" as param
import "http://www.eclipse.org/smartmdsd/base/basicAttributes" as attr

ParamDefModel returns param::ParamDefModel:
	{param::ParamDefModel}
	imports+=ParamDefRepoImport*
	(repository=ParameterSetRepository)?
;

// parser rules for names
FQNW returns ecore::EString: FQN '.*'? ;

ParamDefRepoImport returns param::ParamDefRepoImport:
	'#import' importedNamespace=FQNW (';')?
;

ParameterSetRepository returns param::ParameterSetRepository:
	(documentation=DOCU_COMMENT)?
	'ParameterSetRepository' name=ID
	'{'
		sets+=ParameterSetDefinition*
	'}'
;

ParameterSetDefinition returns param::ParameterSetDefinition:
	(documentation=DOCU_COMMENT)?
	'ParameterSet' name=ID ('extends' extends+=[param::ParameterSetDefinition|FQN] ( "," extends+=[param::ParameterSetDefinition|FQN])* )?
	'{'
		parameters+=AbstractParameter*
	'}'
;

AbstractParameter returns param::AbstractParameter:
	ParameterDefinition | TriggerDefinition;

ParameterDefinition returns param::ParameterDefinition:
	(documentation=DOCU_COMMENT)?
	'Parameter' name=ID
	'{'
		attributes+=AttributeDefinition*
	'}'
;

TriggerDefinition returns param::TriggerDefinition:
	(documentation=DOCU_COMMENT)?
	'Trigger' name=ID
	'{'
		attributes+=AttributeDefinition*
	'}'
;
