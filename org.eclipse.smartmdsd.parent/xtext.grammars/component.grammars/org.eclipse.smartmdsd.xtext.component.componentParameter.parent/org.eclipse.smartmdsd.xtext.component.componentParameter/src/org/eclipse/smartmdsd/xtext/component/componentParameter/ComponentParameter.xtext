/********************************************************************************
 * Copyright (c) 2017 Technische Hochschule Ulm, Servicerobotics Ulm, Germany
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Contributors:
 *   Alex Lotz, Dennis Stampfer, Matthias Lutz
 ********************************************************************************/
grammar org.eclipse.smartmdsd.xtext.component.componentParameter.ComponentParameter with org.eclipse.smartmdsd.xtext.service.parameterDefinition.ParameterDefinition

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/smartmdsd/base/basicAttributes" as basicAttributes
import "http://www.eclipse.org/smartmdsd/service/parameterDefinition" as parameterDefinition
import "http://www.eclipse.org/smartmdsd/component/componentDefinition" as componentDefinition
import "http://www.eclipse.org/smartmdsd/component/componentParameter" as componentParam

ComponentParamModel returns componentParam::ComponentParamModel:
	{componentParam::ComponentParamModel}
	imports+=super::ParamDefRepoImport*
	(parametrization=ComponentParameter)?
;

ComponentParameter returns componentParam::ComponentParameter:
	'ComponentParameter' name= ID ('component' component=[componentDefinition::ComponentDefinition|FQN])?
	'{'
		parameters+=AbstractComponentParameter*
	'}';

AbstractComponentParameter returns componentParam::AbstractComponentParameter:
	InternalParameter | ExtendedParameter | ExtendedTrigger | ParameterSetInstance;

InternalParameter returns componentParam::InternalParameter:
	(documentation=DOCU_COMMENT)?
	'InternalParameter'	name=ID
	'{'
		attributes+=BasicAttributes::AttributeDefinition*
	'}';

ExtendedParameter returns componentParam::ExtendedParameter:
	(documentation=DOCU_COMMENT)?
	'ExtendedParameter' name=ID
	'{'
		attributes+=BasicAttributes::AttributeDefinition*
	'}';

ExtendedTrigger returns componentParam::ExtendedTrigger:
	(documentation=DOCU_COMMENT)?
	'ExtendedTrigger' name=ID (active?='active'|'passive')
	'{'
		attributes+=BasicAttributes::AttributeDefinition*
	'}';


ParameterSetInstance returns componentParam::ParameterSetInstance:
	(documentation=DOCU_COMMENT)?
	'ParameterSetInstance' paramSet=[parameterDefinition::ParameterSetDefinition|FQN]
	'{'
		parameterInstances+=AbstractParameterInstance*
	'}';

AbstractParameterInstance returns componentParam::AbstractParameterInstance:
	TriggerInstance | ParameterInstance;

TriggerInstance returns componentParam::TriggerInstance:
	(documentation=DOCU_COMMENT)?
	'TriggerInstance' triggerDef=[parameterDefinition::TriggerDefinition|FQN]
	(active?='active'|'passive') (';')?
;

ParameterInstance returns componentParam::ParameterInstance:
	(documentation=DOCU_COMMENT)?
	'ParameterInstance' parameterDef=[parameterDefinition::ParameterDefinition|FQN]
	'{'
		attributes+=BasicAttributes::AttributeRefinement*
	'}';
