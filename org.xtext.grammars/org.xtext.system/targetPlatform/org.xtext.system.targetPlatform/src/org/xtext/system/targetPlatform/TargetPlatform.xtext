//================================================================
//
//  Copyright (C) 2017 Alex Lotz, Dennis Stampfer, Matthias Lutz
//
//        lotz@hs-ulm.de
//        stampfer@hs-ulm.de
//        lutz@hs-ulm.de
//
//        Servicerobotik Ulm
//        Christian Schlegel
//        Ulm University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm
//        Germany
//
//  This file is part of the SmartMDSD Toolchain V3. 
//
//================================================================
grammar org.xtext.system.targetPlatform.TargetPlatform with org.xtext.service.roboticMiddleware.RoboticMiddleware

import "http://www.ecore.org/system/TargetPlatform" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TargetPlatformModel returns TargetPlatformModel:
	'TargetPlatformModel' name=ID
	'{'
		elements+=AbstractTPElement*
	'}';

AbstractTPElement returns AbstractTPElement:
	TargetPlatformDefinition | NetworkConnection;
	
NetworkConnection returns NetworkConnection:
	'NetworkConnection'
	'{'
		endpoint1=[NetworkInterface|FQN] '<->' endpoint2=[NetworkInterface|FQN]
		('kind' kind=EString)? 
	'}';

TargetPlatformDefinition returns TargetPlatformDefinition:
	'TargetPlatformDefinition' name=ID
	'{'
		(os=OperatingSystem)?
		elements+=AbstractTPSubNode*
	'}';

OperatingSystem returns OperatingSystem: 
	Windows | Linux | MacOS
;

Windows returns Windows:
	{Windows}
	'Windows' (kind=STRING)? (';')?
;
Linux returns Linux:
	{Linux}
	'Linux' (kind=STRING)? (';')?
;
MacOS returns MacOS:
	{MacOS}
	'MacOS' (kind=STRING)? (';')?
;


AbstractTPSubNode returns AbstractTPSubNode: 
	NetworkInterface | CPU | LoginAccount | TargetMiddleware
;


NetworkInterface returns NetworkInterface:
	'NetworkInterface' name=ID '{'
		(
			('HostAddress' hostAddress=STRING (':' portNr=EInt)?) &			
			('Kind' kind=EString)?
		)
	'}'
;

CPU returns CPU:
	'CPU' name=ID
	'{'
		(
			('Kind' kind=EString)? &
			('CoresTally' coresTally=EInt)
		)
	'}'
;
	

LoginAccount returns LoginAccount:
	'LoginAccount' name=ID '{'
		(
			('FullName' fullname=STRING)? &
			('Email' email=STRING)?
		)
	'}'
;

TargetMiddleware returns TargetMiddleware: 
	'TargetMiddleware' middleware=RoboticMiddleware (';')?
;

