//===================================================================================
//
//  Copyright (C) 2017 Alex Lotz, Dennis Stampfer, Matthias Lutz, Christian Schlegel
//
//        lotz@hs-ulm.de
//        stampfer@hs-ulm.de
//        lutz@hs-ulm.de
//        schlegel@hs-ulm.de
//
//        Servicerobotik Ulm
//        Christian Schlegel
//        Ulm University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm
//        Germany
//
//  This file is part of the SmartMDSD Toolchain V3. 
//
//  Redistribution and use in source and binary forms, with or without modification, 
//  are permitted provided that the following conditions are met:
//  
//  1. Redistributions of source code must retain the above copyright notice, 
//     this list of conditions and the following disclaimer.
//  
//  2. Redistributions in binary form must reproduce the above copyright notice, 
//     this list of conditions and the following disclaimer in the documentation 
//     and/or other materials provided with the distribution.
//  
//  3. Neither the name of the copyright holder nor the names of its contributors 
//     may be used to endorse or promote products derived from this software 
//     without specific prior written permission.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
//  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
//  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
//  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
//  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
//  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
//  OF THE POSSIBILITY OF SUCH DAMAGE.
//
//===================================================================================
grammar org.xtext.system.deployment.Deployment with org.eclipse.xtext.common.Terminals

import "http://www.ecore.org/system/Deployment" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.ecore.org/system/TargetPlatform" as targetPlatform
import "http://www.ecore.org/system/ComponentArchitecture" as componentArchitecture

DeploymentModel returns DeploymentModel:
	'DeploymentModel' name=ID ('using' 'ComponentArchitecture' componentArch=[componentArchitecture::SystemComponentArchitecture|FQN])?
	'{'
		elements+=AbstractDeploymentElement*
	'}';

AbstractDeploymentElement returns AbstractDeploymentElement:
	NamingService | TargetPlatformReference | ComponentArtefact | TargetModelInclude
;

EInt returns ecore::EInt:
	'-'? INT;
EString returns ecore::EString:
	STRING
;
	
FQN:
	ID ('.'ID)*
;

TargetModelInclude returns TargetModelInclude: 
	'#import' importedNamespace=EString (';')?
;


TargetPlatformReference returns TargetPlatformReference:
	'TargetPlatformReference' name=ID 'using' platform=[targetPlatform::TargetPlatformDefinition|FQN] '{'
		(
			(directory=UploadDirectory)? &
			(login=LoginAccountSelection)? &
			(host=NetworkInterfaceSelection)?
		)
	'}'
;

UploadDirectory returns UploadDirectory: 
	'UploadDirectory' path=STRING
;

LoginAccountSelection returns LoginAccountSelection:
	'LoginAccount' login=[targetPlatform::LoginAccount|FQN]
;

NetworkInterfaceSelection returns NetworkInterfaceSelection:
	'NetworkInterface' network=[targetPlatform::NetworkInterface|FQN]
;


ComponentArtefact returns ComponentArtefact:
	'ComponentArtefact' component=[componentArchitecture::ComponentInstance|FQN] (deploy=Deployment)? (';')?;

NamingService returns NamingService:
	{NamingService}
	'NamingService'
	'{'
		(
			('portNr' portNr=EInt)? &
			(deploy=Deployment)?
		)
	'}';

Deployment returns Deployment:
	'deploy-to' to=[TargetPlatformReference|FQN]
;

